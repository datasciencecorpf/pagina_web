{"version":3,"file":"static/js/460.d9a41638.chunk.js","mappings":"sOAuEA,EA/DwB,SAAHA,GAAmB,IAAbC,EAAKD,EAALC,MACvBC,GAA0BC,EAAAA,EAAAA,YAAWC,EAAAA,GAAYC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA1CK,EAAKF,EAAA,GACZG,GADsBH,EAAA,IACUI,EAAAA,EAAAA,UAAS,OAAKC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAAvCG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAwCJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/CE,EAAUD,EAAA,GAAEE,EAAiBF,EAAA,GACpCG,GAAwCR,EAAAA,EAAAA,UAAS,IAAGS,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA/BE,GAAFD,EAAA,GAAiBA,EAAA,IACpCE,GAA8BX,EAAAA,EAAAA,WAAS,GAAKY,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEhBV,GAAW,GAAO,wBAAAQ,EAAAG,OAAA,GAAAL,EAAA,KACrB,kBAHgB,OAAAJ,EAAAU,MAAA,KAAAC,UAAA,KAKXC,EAAW,eAAAC,GAAAZ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAW,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAf,EAAAA,EAAAA,KAAAG,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OAOf,OANKO,EAAiB,CACnBI,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAYvC,IAElCoC,EAAAV,KAAA,EAEsBc,MAAM,gBAAiBP,GAAe,OAA/C,IAARC,EAAQE,EAAAK,MAEAC,GAAG,CAADN,EAAAV,KAAA,QACZd,EAAgB,iDAAiDwB,EAAAV,KAAA,uBAAAU,EAAAV,KAAA,GAE9CQ,EAASS,OAAO,KAAD,GAA5BR,EAAIC,EAAAK,KACVpC,EAAY8B,EAAKS,QACjBnC,EAAkB0B,EAAKU,UAAU,yBAAAT,EAAAT,OAAA,GAAAK,EAAA,KAGxC,kBAnBgB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAyBjB,OAJAiB,EAAAA,EAAAA,YAAU,WACNhB,GAEJ,KAEIiB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAAEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACLD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBH,UAC9BC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,QAAOH,SAAE,cAAgB7C,EAAW,IAAMI,EAAa,MAAQd,MAEhFqB,GACDgC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAAEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8EAINC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,UACpBC,EAAAA,EAAAA,KAAA,UAAQE,UAAU,iCAAiCC,QAAS,kBAAMpC,GAAa,EAACgC,UAG5EC,EAAAA,EAAAA,KAAA,KAAAD,SAAI,oBAGCC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACbC,EAAAA,EAAAA,KAACI,EAAAA,EAAe,QAMhC,C,4EC1DA,MARA,WACE,OACEJ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iBAAgBH,UAC7BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAGrB,C","sources":["components/BOTS/BotDistribucion.jsx","components/CircularLoading.jsx"],"sourcesContent":["import '../css/DistribucionStyle.css';\r\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport Navbar from \"../NavBar\";\r\nimport CircularLoading from \"../CircularLoading\";\r\n\r\n\r\n\r\nconst BotDistribucion = ({ title }) => {\r\n    const [token, setToken] = useContext(UserContext);\r\n    const [username, setUserName] = useState(null);\r\n    const [secondName, setUserSecondName] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const init_distro = async () =>{\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const getUserdata = async () => {\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n        };\r\n\r\n        const response = await fetch(\"/api/users/me\", requestOptions)\r\n\r\n        if (!response.ok) {\r\n            setErrorMessage(\"Something went wrong. Couldn't load the leads\");\r\n        } else {\r\n            const data = await response.json();\r\n            setUserName(data.nombre);\r\n            setUserSecondName(data.apellido);\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserdata();\r\n\r\n    });\r\n    return (\r\n        <><Navbar />\r\n            <div className=\"has-text-left m-6\">\r\n                <h1 className=\"title\">{\"Bienvenid@ \" + username + \" \" + secondName + \" - \" + title}</h1>\r\n            </div>\r\n            {loading ? (\r\n            <><h1>\r\n                Bot para realizar la distribuci√≥n de los diferentes centros de costos\r\n            </h1>\r\n            \r\n            <div className=\"btn-empezar\">\r\n                    <button className=\"button is-large is-warning m-1\" onClick={() => init_distro()}\r\n\r\n                    >\r\n                        <b>{\"Empezar\"}</b>\r\n                    </button>\r\n\r\n                </div></> ):(<>\r\n                <CircularLoading />\r\n            </>)\r\n            \r\n            }\r\n\r\n        </>);\r\n}\r\n\r\nexport default BotDistribucion;","import React from \"react\";\r\nimport './css/CircularLoading.css'\r\n\r\nfunction CircularLoading() {\r\n  return (\r\n    <div className=\"circle-loading\">\r\n      <div className=\"circle\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CircularLoading;\r\n"],"names":["_ref","title","_useContext","useContext","UserContext","_useContext2","_slicedToArray","token","_useState","useState","_useState2","username","setUserName","_useState3","_useState4","secondName","setUserSecondName","_useState5","_useState6","setErrorMessage","_useState7","_useState8","loading","setLoading","init_distro","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","getUserdata","_ref3","_callee2","requestOptions","response","data","_context2","method","headers","Authorization","fetch","sent","ok","json","nombre","apellido","useEffect","_jsxs","_Fragment","children","_jsx","Navbar","className","onClick","CircularLoading"],"sourceRoot":""}